name: Sync Docs to Confluence

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  sync-to-confluence:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Pandoc
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Convert Markdown to Confluence Wiki Markup
        run: |
          mkdir -p converted
          for file in process-docs/*.md; do
            pandoc "$file" -f markdown -t mediawiki -o "converted/$(basename "$file" .md).conf"
          done

      - name: Sync Pages with Confluence
        env:
          CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
          CONFLUENCE_SPACE_KEY: ${{ secrets.CONFLUENCE_SPACE_KEY }}
          CONFLUENCE_BASE_URL: "https://docrobertson.atlassian.net/wiki"
          CONFLUENCE_PARENT_PAGE_ID: ${{ secrets.CONFLUENCE_PARENT_PAGE_ID }}
        run: |
          for file in converted/*.conf; do
            PAGE_TITLE=$(basename "$file" .conf)

            # Step 1: Check if the page exists
            PAGE_RESPONSE=$(curl -s -u "docrobertson@me.com:$CONFLUENCE_API_TOKEN" \
              -X GET "$CONFLUENCE_BASE_URL/rest/api/content?title=$PAGE_TITLE&spaceKey=$CONFLUENCE_SPACE_KEY&expand=version")

            PAGE_ID=$(echo "$PAGE_RESPONSE" | jq -r '.results[0].id')
            PAGE_VERSION=$(echo "$PAGE_RESPONSE" | jq -r '.results[0].version.number')

            if [ "$PAGE_ID" != "null" ]; then
              # Step 2: Update existing page
              NEW_VERSION=$((PAGE_VERSION + 1))
              echo "Updating existing page: $PAGE_TITLE (ID: $PAGE_ID, Version: $NEW_VERSION)"

              curl -u "docrobertson@me.com:$CONFLUENCE_API_TOKEN" \
                   -X PUT \
                   -H "Content-Type: application/json" \
                   --data '{
                     "id": "'"$PAGE_ID"'",
                     "type": "page",
                     "title": "'"$PAGE_TITLE"'",
                     "space": {"key": "'"$CONFLUENCE_SPACE_KEY"'"},
                     "version": {"number": "'"$NEW_VERSION"'"},
                     "body": {
                       "storage": {
                         "value": "'"$(cat "$file")"'",
                         "representation": "wiki"
                       }
                     }
                   }' \
                   "$CONFLUENCE_BASE_URL/rest/api/content/$PAGE_ID"
            else
              # Step 3: Create a new page
              echo "Creating new page: $PAGE_TITLE"

              curl -u "docrobertson@me.com:$CONFLUENCE_API_TOKEN" \
                   -X POST \
                   -H "Content-Type: application/json" \
                   --data '{
                     "type": "page",
                     "title": "'"$PAGE_TITLE"'",
                     "ancestors": [{"id": "'"$CONFLUENCE_PARENT_PAGE_ID"'"}],
                     "space": {"key": "'"$CONFLUENCE_SPACE_KEY"'"},
                     "body": {
                       "storage": {
                         "value": "'"$(cat "$file")"'",
                         "representation": "wiki"
                       }
                     }
                   }' \
                   "$CONFLUENCE_BASE_URL/rest/api/content"
            fi
          done
